<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>浩楠的运维笔记</title><link>https://h-haonan.github.io/haonan/</link><description>用心甘情愿的态度，过随遇而安的生活</description><copyright>浩楠的运维笔记</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.com/H-haonan/H-haonan.github.io/blob/master/img/avatar.png?raw=true</url><title>avatar</title><link>https://h-haonan.github.io/haonan/</link></image><lastBuildDate>Fri, 10 May 2024 06:42:49 +0000</lastBuildDate><managingEditor>浩楠的运维笔记</managingEditor><ttl>60</ttl><webMaster>浩楠的运维笔记</webMaster><item><title>nginx编译</title><link>https://h-haonan.github.io/haonan//post/nginx-bian-yi.html</link><description>方法一：直接编译&#13;
 tar -zxvf nginx-1.20.2.tar.gz&#13;
ll&#13;
cd nginx-1.20.2&#13;
ll&#13;
yum install -y gcc gcc-c++ glibc make autoconf openssl openssl-devel &amp;&amp; yum install -y pcre-devel libxslt-devel gd-devel GeoIP GeoIP-devel GeoIP-data&#13;
cd ..&#13;
 yum install -y unzip zip &amp;&amp; unzip ngx_http_substitutions_filter_module-master.zip&#13;
cd nginx-1.20.2&#13;
&#13;
&#13;
./configure --prefix=/usr/local/nginx --with-file-aio --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_xslt_module --with-http_image_filter_module --with-http_geoip_module  --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_stub_status_module --add-module=/home/install/ngx_http_substitutions_filter_module-master &amp;&amp; make &amp;&amp; make install&#13;
&#13;
cd /usr/local/nginx/sbin/&#13;
./nginx&#13;
./nginx -s stop&#13;
./nginx&#13;
cd ..&#13;
cd sbin&#13;
./nginx -s reload&#13;
&#13;
ps -ef | grep nginx&#13;
方法二：通过nginx二进制包安装&#13;
需要加入/usr/local/nginx/conf/nginx.conf文件和/usr/local/nginx/logs/error.log文件&#13;
执行chmod a+x nginx最后执行./nginx&#13;
。</description><guid isPermaLink="true">https://h-haonan.github.io/haonan//post/nginx-bian-yi.html</guid><pubDate>Fri, 10 May 2024 06:42:18 +0000</pubDate></item><item><title>redmine部署</title><link>https://h-haonan.github.io/haonan//post/redmine-bu-shu.html</link><description>环境：&#13;
Centos7环境&#13;
内核版本号：4.19.94-300.el7.x86_64&#13;
1.安装系统包和部分软件包&#13;
yum -y install patch make gcc gcc-c++ gcc-g77 flex* bison file  &#13;
yum -y install libtool libtool-libs libtool-ltdl-devel* autoconf kernel-devel automake libmcrypt*  &#13;
yum -y install libjpeg libjpeg-devel libpng libpng-devel libpng10 libpng10-devel gd gd-devel  &#13;
yum -y install freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel  &#13;
yum -y install glib2 glib2-devel bzip2 bzip2-devel libevent libevent-devel  &#13;
yum -y install ncurses ncurses-devel curl curl-devel e2fsprogs  &#13;
yum -y install e2fsprogs-devel krb5 krb5-devel libidn libidn-devel  &#13;
yum -y install openssl openssl-devel vim-minimal nano sendmail  &#13;
yum -y install fonts-chinese gettext gettext-devel  &#13;
yum -y install gmp-devel pspell-devel   &#13;
yum -y install readline* libxslt* pcre* net-snmp* gmp* libtidy*  &#13;
yum -y install ImageMagick* subversion*&#13;
&#13;
2.安装mysql&#13;
rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022&#13;
yum install mysql-server&#13;
启动mysql服务并查看运行状态&#13;
service mysqld start&#13;
systemctl status mysqld&#13;
查看初始密码：grep 'A temporary password' /var/log/mysqld.log&#13;
登录：mysql -uroot –p&#13;
密码就是查看初始密码&#13;
然后先需要改密码，要不会有提醒&#13;
先设置长度和等级&#13;
mysql&gt; set global validate_password_policy=LOW;&#13;
mysql&gt; set global validate_password_length=6;&#13;
mysql&gt; ALTER USER USER() IDENTIFIED BY '123456';#123456为密码&#13;
创建数据库&#13;
create database redmine character set utf8;  &#13;
create user 'redmine'@'localhost' IDENTIFIED BY '123456'; #用户名: redmine; 密码:123456  &#13;
grant all privileges on redmine.* to 'redmine'@'localhost'; #最大权限  &#13;
flush privileges;&#13;
exit退出&#13;
&#13;
3.安装rvm&#13;
1.创建目录&#13;
cd /usr/local&#13;
mkdir rvm&#13;
cd rvm&#13;
command curl -sSL https://rvm.io/mpapis.asc | gpg2 --import -&#13;
command curl -sSL https://rvm.io/pkuczynski.asc | gpg2 --import -&#13;
curl -L get.rvm.io | bash -s stable&#13;
或者&#13;
1.执行curl -L get.rvm.io | bash -s stable， 一般会报错，并提示&#13;
gpg --keyserver hkp://keys.gnupg.net&#13;
–recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3&#13;
7D2BAF1CF37B13E2069D6956105BD0E739499BDB&#13;
&#13;
2.这时便获取密钥，然后执行gpg --keyserver hkp://keys.gnupg.net&#13;
–recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3&#13;
7D2BAF1CF37B13E2069D6956105BD0E739499BDB&#13;
3.执行curl -sSL https://get.rvm.io | bash -s stable&#13;
4. 查看rvm版本 rvm –v&#13;
不好用执行source /etc/profile.d/rvm.sh&#13;
&#13;
4.安装ruby&#13;
查看是否有ruby2.6版本&#13;
rvm list known&#13;
rvm install 2.6&#13;
&#13;
5.安装rails和相关依赖包&#13;
安装rails5.2&#13;
gem install rails -v 5.2  &#13;
安装rake&#13;
gem install rake  &#13;
安装mysql2&#13;
gem install mysql2  &#13;
安装activesupport&#13;
gem install activesupport -v 4.2.6&#13;
安装cocoapods&#13;
gem install cocoapods&#13;
&#13;
6.下载redmine并安装依赖&#13;
cd /home&#13;
https://www.redmine.org/projects/redmine/wiki/Download #下载地址&#13;
将下载的安装包放入home路径下解压&#13;
cd redmine-4.2.0&#13;
bundle install&#13;
&#13;
7.配置redmine并初始化&#13;
配置文件&#13;
cp config/database.yml.example config/database.yml  &#13;
选择production部分修改数据库密码&#13;
vim config/database.yml &#13;
安装mysql2&#13;
gem install mysql2&#13;
生成Rails使用的随机密钥，用于编码存储会话数据的cookie，从而防止其被篡改。</description><guid isPermaLink="true">https://h-haonan.github.io/haonan//post/redmine-bu-shu.html</guid><pubDate>Fri, 10 May 2024 06:41:37 +0000</pubDate></item><item><title>Jenkins部署</title><link>https://h-haonan.github.io/haonan//post/Jenkins-bu-shu.html</link><description>Jenkins部署&#13;
基于centos7环境，默认docker已经安装&#13;
以docker方式部署jenkins&#13;
启动安装&#13;
1.启动docker，下载Jenkins镜像文件&#13;
docker pull jenkins/jenkins&#13;
 2.创建Jenkins挂载目录并授权权限&#13;
（我们在服务器上先创建一个jenkins工作目录 /var/jenkins_mount，赋予相应权限，稍后我们将jenkins容器目录挂载到这个目录上，这样我们就可以很方便地对容器内的配置文件进行修改。</description><guid isPermaLink="true">https://h-haonan.github.io/haonan//post/Jenkins-bu-shu.html</guid><pubDate>Fri, 10 May 2024 06:40:17 +0000</pubDate></item><item><title>helm转yaml方法</title><link>https://h-haonan.github.io/haonan//post/helm-zhuan-yaml-fang-fa.html</link><description>#1.首先需要一个http服务器，通过docker或者在centos上直接yum install 部署都可以&#13;
docker run -d -p 8081:80 -v /var/www:/usr/local/apache2/htdocs httpd&#13;
这个docker命令会创建并运行一个httpd容器,参数说明如下:&#13;
- `-d`: 后台运行容器&#13;
- `-p 8081:80`: 映射容器内80端口到宿主机8081端口&#13;
- `-v /var/www:/usr/local/apache2/htdocs`: 把宿主机/var/www目录挂载到容器的/usr/local/apache2/htdocs,作为网页文档根目录&#13;
- `httpd`: 使用httpd镜像启动容器&#13;
这样就在宿主机8081端口启动了一个httpd服务器,网页文档来自宿主机的/var/www目录。</description><guid isPermaLink="true">https://h-haonan.github.io/haonan//post/helm-zhuan-yaml-fang-fa.html</guid><pubDate>Fri, 10 May 2024 06:37:02 +0000</pubDate></item><item><title>PXE系统部署</title><link>https://h-haonan.github.io/haonan//post/PXE-xi-tong-bu-shu.html</link><description>PXE系统部署&#13;
✧ 使用http用来发布linux系统的安装树（也可以使用NFS、FTP server或HTTPS）&#13;
✧ DHCP server为客户端分配ip并提供TFTP服务器地址及PXE启动文件位置&#13;
✧ TFTP server为客户端提供引导文件。</description><guid isPermaLink="true">https://h-haonan.github.io/haonan//post/PXE-xi-tong-bu-shu.html</guid><pubDate>Fri, 10 May 2024 06:25:15 +0000</pubDate></item><item><title>rancher高可用安装（基于k8s集群基础上通过helm安装）</title><link>https://h-haonan.github.io/haonan//post/rancher-gao-ke-yong-an-zhuang-%EF%BC%88-ji-yu-k8s-ji-qun-ji-chu-shang-tong-guo-helm-an-zhuang-%EF%BC%89.html</link><description>k8s集群安装部署（先决条件）&#13;
一. 添加 Helm Chart 仓库&#13;
请将命令中的&lt;CHART_REPO&gt;，替换为latest，stable或alpha。</description><guid isPermaLink="true">https://h-haonan.github.io/haonan//post/rancher-gao-ke-yong-an-zhuang-%EF%BC%88-ji-yu-k8s-ji-qun-ji-chu-shang-tong-guo-helm-an-zhuang-%EF%BC%89.html</guid><pubDate>Mon, 29 Apr 2024 01:08:57 +0000</pubDate></item><item><title>安装部署keepalived</title><link>https://h-haonan.github.io/haonan//post/an-zhuang-bu-shu-keepalived.html</link><description>1. 安装部署keepalived（Master和Slave两机器同样操作）&#13;
1）安装keepalived&#13;
# yum -y install keepalived&#13;
&#13;
2）Master节点的keepalived.conf配置&#13;
这里特别需要注意：&#13;
一定要设置keepalived为非抢占模式，如果设置成抢占模式会在不断的切换主备时容易造成NFS数据丢失。</description><guid isPermaLink="true">https://h-haonan.github.io/haonan//post/an-zhuang-bu-shu-keepalived.html</guid><pubDate>Mon, 01 Apr 2024 09:11:16 +0000</pubDate></item><item><title>镜像本地打包发往没有网的服务器</title><link>https://h-haonan.github.io/haonan//post/jing-xiang-ben-di-da-bao-fa-wang-mei-you-wang-de-fu-wu-qi.html</link><description>使用 docker pull 拉取镜像的时候需要网络，但是项目部署一般都是在内网。</description><guid isPermaLink="true">https://h-haonan.github.io/haonan//post/jing-xiang-ben-di-da-bao-fa-wang-mei-you-wang-de-fu-wu-qi.html</guid><pubDate>Mon, 01 Apr 2024 09:02:09 +0000</pubDate></item><item><title>那些我必安装的Awesome Windows App推荐。</title><link>https://h-haonan.github.io/haonan//post/na-xie-wo-bi-an-zhuang-de-Awesome%20Windows%20App-tui-jian-%E3%80%82.html</link><description>🗃️ [7-Zip](http://www.7-zip.org/) - 用于处理压缩包的开源Windows实用程序&#13;
🖼️ [Snipaste](https://snipaste.com/) - 高效率、功能全面的截图软件&#13;
🖼️ [ScreenToGif](http://www.screentogif.com/) - 它允许你录制屏幕的一部分区域并保存为 gif 或视频&#13;
✏️ [Visual Studio Code](https://code.visualstudio.com/) - 宇宙最强文本编辑器&#13;
📝 [PDFgear](https://www.pdfgear.com/) - 免费的PDF查看&amp;编辑器&#13;
📝 [PDF24](https://tools.pdf24.org/) - 免费的在线PDF查看&amp;编辑器&#13;
📽️ [PotPlayer](http://potplayer.daum.net/) - 多媒体播放器，具有广泛的编解码器集合&#13;
🟢 [GEEK UNINSTALLER](https://geekuninstaller.com/) - 好用的软件卸载工具&#13;
🔍 [Everything](http://www.voidtools.com/) - 最快的文件/文件夹搜索工具， 通过名称搜索&#13;
⌨️ [MobaXterm](http://mobaxterm.mobatek.net/) - Xserver 和标签式 SSH 客户端&#13;
⌨️ [Tera Term](https://teratermproject.github.io/index-en.html) - 好用的串口调试助手&#13;
🖥️ [CPU-Z](http://www.cpuid.com/softwares/cpu-z.html) - 免费且功能齐全的 CPU 监控工具&#13;
🖥️ [GPU-Z](http://www.techpowerup.com/gpuz/) - 免费且功能齐全的 GPU 监控工具&#13;
💾 [DiskGenius](https://www.diskgenius.cn/) - 老牌国产软件，专注数据恢复与磁盘管理，中文界面。</description><guid isPermaLink="true">https://h-haonan.github.io/haonan//post/na-xie-wo-bi-an-zhuang-de-Awesome%20Windows%20App-tui-jian-%E3%80%82.html</guid><pubDate>Mon, 01 Apr 2024 08:42:06 +0000</pubDate></item></channel></rss>